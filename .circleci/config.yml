version: 2
jobs:
  build:
    working_directory: ~/circleci
    docker:
      - image: circleci/python:3.8.2
      - image: circleci/postgres:12
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: circleci
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: circleci/mariadb:latest
        environment:
          MYSQL_DATABASE: circleci
          MYSQL_USER: circleci
          MYSQL_PASSWORD: ''
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -wait tcp://localhost:3306 -timeout 1m
      - run: sudo apt-get update
      - run: sudo apt-get install -y postgresql-client
      - run: sudo apt-get install -y default-mysql-client
      - run:
          name: create postgres user
          command: psql postgresql://@localhost/circleci -c 'create role postgres'
      - run:
          name: create mysql user
          command: mysql circleci -u root -h 127.0.0.1 -e "create user 'circleci'@'127.0.0.1'; grant all privileges on *.* to 'circleci'@'127.0.0.1' identified by '';"
      - run:
          name: Install poetry
          command: |
            sudo pip3 install poetry>=1.0.0
            poetry config virtualenvs.create false
      - run:
          command: |
            python3 -m venv ~/.venv
            . ~/.venv/bin/activate

            poetry install
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "pyproject.toml" }}
          paths:
            - "~/.venv"
      - run:
          name: Check formatting
          command: |
            . ~/.venv/bin/activate
            make lint
      - run:
          command: |
            . ~/.venv/bin/activate
            make test
      - store_artifacts:
          path: test-reports/
          destination: tr1

  publish:
    working_directory: ~/circleci
    docker:
      - image: circleci/python:3.8.2
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install poetry, deps
          command: |
            sudo pip3 install poetry>=1.0.0
            poetry config virtualenvs.create false
            python3 -m venv ~/.venv
            . ~/.venv/bin/activate
            poetry install
      - run:
          name: Bump version, build, install
          command: |
            . ~/.venv/bin/activate
            python deploy/vbump.py
            poetry build
            poetry publish --username $PYPI_USERNAME --password $PYPI_PASSWORD

  docs:
    working_directory: ~/circleci
    docker:
      - image: circleci/python:3.8.2
    steps:
      - add_ssh_keys:
          fingerprints:
            - "16:c5:65:5d:31:50:a7:06:16:c2:ca:a6:3a:a9:70:be"
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "pyproject.toml" }}
      - run:
          name: Install sphinx
          command: sudo pip3 install sphinx sphinx_rtd_theme
      - run:
          name: Build gh-pages branch
          command: |
            git config user.email "circleci@circleci.com"
            git config user.name "circleci"
            bash deploy/gh-pages.sh
      - run:
          name: Push gh-pages to github
          command: git push --force origin gh-pages


workflows:
  version: 2
  build-then-publish:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: master
      - docs:
          filters:
            branches:
              only: master
